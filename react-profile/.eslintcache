[{"/Volumes/Ritesh/computer-science/projects/web-dev/DSC-NITR/project-icecream/react-profile/src/components/App.tsx":"1","/Volumes/Ritesh/computer-science/projects/web-dev/DSC-NITR/project-icecream/react-profile/src/components/carousel/Item.tsx":"2","/Volumes/Ritesh/computer-science/projects/web-dev/DSC-NITR/project-icecream/react-profile/src/components/carousel/Carousel.tsx":"3","/Volumes/Ritesh/computer-science/projects/web-dev/DSC-NITR/project-icecream/react-profile/src/index.tsx":"4","/Volumes/Ritesh/computer-science/projects/web-dev/DSC-NITR/project-icecream/react-profile/src/components/Modal.tsx":"5"},{"size":2397,"mtime":1609759339211,"results":"6","hashOfConfig":"7"},{"size":1959,"mtime":1609038704936,"results":"8","hashOfConfig":"7"},{"size":1178,"mtime":1609038470002,"results":"9","hashOfConfig":"7"},{"size":163,"mtime":1608895975476,"results":"10","hashOfConfig":"7"},{"size":1562,"mtime":1609068624912,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"14"},"15b2z3d",{"filePath":"15","messages":"16","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Volumes/Ritesh/computer-science/projects/web-dev/DSC-NITR/project-icecream/react-profile/src/components/App.tsx",["23","24"],"import React, {useState} from 'react'\nimport ImageUploader from 'react-images-upload';\nimport {makeStyles} from '@material-ui/core'\nimport Cropper from 'react-easy-crop'\n\n\n// import FrameCarousel from './carousel/Carousel'\n\nconst App: React.FC = () => {\n  const [image, setImage] = useState<null | File>(null)\n  const [crop, setCrop] = useState<{x: number, y: number}>({x: 0, y: 0})\n  const [zoom, setZoom] = useState<number>(1)\n  const [aspect, setAspect] = useState<number>(1/1)\n\n  return (\n    <div>\n      <h1>Hello Typescript!</h1>\n      <ImageUploader\n        withIcon={false}\n        withLabel={false}\n        buttonText='Choose images'\n        onChange={async (picture) => {setImage(picture[0])}}\n        imgExtension={['.jpg', '.gif', '.png', '.gif', '.jpeg']}\n        maxFileSize={5242880 * 2}\n        singleImage={true}\n      />\n      {image && (\n        <div\n        style={{\n          height: 576 + 64,\n          width: 576 + 64,\n          overflow: 'hidden',\n          backgroundImage: 'url(/frame.png)',\n          backgroundPosition: 'center',\n          backgroundSize: 'cover',\n          position: 'relative',\n        }}\n      >\n          <Cropper\n              image={image ? URL.createObjectURL(image) : ''}\n              crop={crop}\n              zoom={zoom}\n              aspect={aspect}\n              minZoom={1}\n              restrictPosition={false}\n              cropSize={{ width: 512, height: 512 }}\n              onCropChange={(crop: {x: number, y: number}) => setCrop(crop)}\n              onCropComplete={() => console.log(crop)}\n              onZoomChange={(zoom: number) => setZoom(zoom)}\n              style={{\n                containerStyle: {\n                  width: 512,\n                  height: 512,\n                  overflow: 'hidden',\n                  position: 'absolute',\n                  top: 64,\n                  left: 64,\n                },\n                mediaStyle: {\n                  objectFit: 'cover',\n                  objectPosition: 'center top',\n                },\n                cropAreaStyle: {\n                  boxShadow: '0 0 0 0',\n                },\n              }}\n          /> \n        </div>\n      )}\n      \n    </div>\n  )\n}\n\nexport default App\n\nconst useStyles = makeStyles(() => ({\n  container: {\n    width: '100%',\n    height: 600,\n    // display: 'flex',\n    // justifyContent: 'center',\n    // alignItems: 'center',\n  }\n}))","/Volumes/Ritesh/computer-science/projects/web-dev/DSC-NITR/project-icecream/react-profile/src/components/carousel/Item.tsx",["25","26","27"],"/Volumes/Ritesh/computer-science/projects/web-dev/DSC-NITR/project-icecream/react-profile/src/components/carousel/Carousel.tsx",["28"],"/Volumes/Ritesh/computer-science/projects/web-dev/DSC-NITR/project-icecream/react-profile/src/index.tsx",[],"/Volumes/Ritesh/computer-science/projects/web-dev/DSC-NITR/project-icecream/react-profile/src/components/Modal.tsx",["29"],{"ruleId":"30","severity":1,"message":"31","line":13,"column":18,"nodeType":"32","messageId":"33","endLine":13,"endColumn":27},{"ruleId":"30","severity":1,"message":"34","line":77,"column":7,"nodeType":"32","messageId":"33","endLine":77,"endColumn":16},{"ruleId":"30","severity":1,"message":"35","line":3,"column":15,"nodeType":"32","messageId":"33","endLine":3,"endColumn":25},{"ruleId":"30","severity":1,"message":"36","line":12,"column":17,"nodeType":"32","messageId":"33","endLine":12,"endColumn":25},{"ruleId":"30","severity":1,"message":"31","line":15,"column":18,"nodeType":"32","messageId":"33","endLine":15,"endColumn":27},{"ruleId":"30","severity":1,"message":"37","line":7,"column":9,"nodeType":"32","messageId":"33","endLine":7,"endColumn":17},{"ruleId":"30","severity":1,"message":"38","line":6,"column":10,"nodeType":"32","messageId":"33","endLine":6,"endColumn":17},"@typescript-eslint/no-unused-vars","'setAspect' is assigned a value but never used.","Identifier","unusedVar","'useStyles' is assigned a value but never used.","'Typography' is defined but never used.","'setImage' is assigned a value but never used.","'Carousel' is defined but never used.","'display' is defined but never used."]